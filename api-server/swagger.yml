openapi: 3.0.3
info:
  title: execute_academy API
  description: REST API for execute_academy. See category, product, auth, and user endpoints.
  license:
    name: ''
  version: 0.1.0
servers:
- url: http://localhost:9098
  description: Local dev
paths:
  /api/auth/login:
    post:
      tags:
      - Auth
      summary: Log in and receive access/refresh tokens
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /api/auth/logout:
    post:
      tags:
      - Auth
      summary: Logout (stateless)
      operationId: logout
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
  /api/auth/refresh:
    post:
      tags:
      - Auth
      summary: Exchange refresh token for new access token
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
        required: true
      responses:
        '200':
          description: New access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /api/auth/register:
    post:
      tags:
      - Auth
      summary: Register a new user account
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '200':
          description: Registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
  /api/auth/resend-otp:
    post:
      tags:
      - Auth
      summary: Resend OTP email
      operationId: resend_otp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendOtpRequest'
        required: true
      responses:
        '200':
          description: Sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
  /api/auth/verify:
    post:
      tags:
      - Auth
      summary: Verify email with OTP code
      operationId: verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOtpRequest'
        required: true
      responses:
        '200':
          description: Verified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
  /api/course/:slug:
    get:
      tags:
      - Courses
      operationId: get_course_by_slug
      responses:
        '200':
          description: Course by slug
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
  /api/courses:
    post:
      tags:
      - Courses
      operationId: create_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourseRequest'
        required: true
      responses:
        '201':
          description: Created course
          content:
            text/plain:
              schema:
                type: string
                format: uuid
  /api/courses/:course_id/modules:
    get:
      tags:
      - Courses
      operationId: list_modules
      responses:
        '200':
          description: Modules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseModule'
    post:
      tags:
      - Courses
      operationId: create_module
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModuleRequest'
        required: true
      responses:
        '201':
          description: Created module
          content:
            text/plain:
              schema:
                type: string
                format: uuid
  /api/courses/:id:
    get:
      tags:
      - Courses
      operationId: get_course_by_id
      responses:
        '200':
          description: Course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
    delete:
      tags:
      - Courses
      operationId: delete_course
      responses:
        '200':
          description: Deleted
    patch:
      tags:
      - Courses
      operationId: update_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourseRequest'
        required: true
      responses:
        '200':
          description: Updated course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
  /api/lessons/:id:
    delete:
      tags:
      - Courses
      operationId: delete_lesson
      responses:
        '200':
          description: Deleted
    patch:
      tags:
      - Courses
      operationId: update_lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLessonRequest'
        required: true
      responses:
        '200':
          description: Updated lesson
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
  /api/lessons/:id/video:
    post:
      tags:
      - Courses
      operationId: upload_lesson_video
      responses:
        '200':
          description: Uploaded video and updated lesson
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
  /api/modules/:id:
    delete:
      tags:
      - Courses
      operationId: delete_module
      responses:
        '200':
          description: Deleted
    patch:
      tags:
      - Courses
      operationId: update_module
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateModuleRequest'
        required: true
      responses:
        '200':
          description: Updated module
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseModule'
  /api/modules/:module_id/lessons:
    get:
      tags:
      - Courses
      operationId: list_lessons
      responses:
        '200':
          description: Lessons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lesson'
    post:
      tags:
      - Courses
      operationId: create_lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLessonRequest'
        required: true
      responses:
        '201':
          description: Created lesson
          content:
            text/plain:
              schema:
                type: string
                format: uuid
  /api/users:
    get:
      tags:
      - Users
      summary: Get a user profile by id
      operationId: get_user
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/crate.pkg.response.ApiErrorResponse'
      security:
      - bearerAuth: []
  /api/users/me:
    patch:
      tags:
      - Users
      operationId: update_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        '200':
          description: Updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
      security:
      - bearerAuth: []
components:
  schemas:
    ApiErrorResponse:
      type: object
      description: Standard error response payload returned by the API
      required:
      - code
      - message
      - timestamp
      properties:
        code:
          type: string
          description: Stable machine-readable error code
        details:
          description: Optional structured details for clients (e.g., validation issues)
          nullable: true
        message:
          type: string
          description: Human-readable error message
        timestamp:
          type: string
          format: date-time
          description: Timestamp at which the error was produced
        trace_id:
          type: string
          description: Optional request/trace correlation id
          nullable: true
    Course:
      type: object
      description: API-facing Course types. Mirrors DB but keeps HTTP contract tidy.
      required:
      - id
      - slug
      - title
      - description
      - price
      - duration
      - lessons
      - students
      - published
      - featured
      - view_count
      - created_at
      properties:
        created_at:
          type: string
          format: date-time
        description:
          type: string
        duration:
          type: string
        excerpt:
          type: string
          nullable: true
        featured:
          type: boolean
        id:
          type: string
          format: uuid
        instructor:
          allOf:
          - $ref: '#/components/schemas/Instructor'
          nullable: true
        instructor_id:
          type: string
          format: uuid
          nullable: true
        lessons:
          type: integer
          format: int32
        original_price:
          type: number
          format: double
          nullable: true
        price:
          type: number
          format: double
        published:
          type: boolean
        published_at:
          type: string
          format: date-time
          nullable: true
        slug:
          type: string
        students:
          type: integer
          format: int32
        thumbnail:
          type: string
          nullable: true
        title:
          type: string
        updated_at:
          type: string
          format: date-time
          nullable: true
        view_count:
          type: integer
          format: int32
    CourseModule:
      type: object
      required:
      - id
      - course_id
      - title
      - position
      - created_at
      properties:
        course_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        position:
          type: integer
          format: int32
        title:
          type: string
        updated_at:
          type: string
          format: date-time
          nullable: true
    CreateCourseRequest:
      type: object
      required:
      - slug
      - title
      - description
      - price
      - duration
      - featured
      properties:
        description:
          type: string
        duration:
          type: string
        excerpt:
          type: string
          nullable: true
        featured:
          type: boolean
        original_price:
          type: number
          format: double
          nullable: true
        price:
          type: number
          format: double
        slug:
          type: string
        thumbnail:
          type: string
          nullable: true
        title:
          type: string
    CreateLessonRequest:
      type: object
      required:
      - module_id
      - title
      - duration
      - position
      - is_free
      - published
      properties:
        content:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        duration:
          type: string
        is_free:
          type: boolean
        module_id:
          type: string
          format: uuid
        position:
          type: integer
          format: int32
        published:
          type: boolean
        title:
          type: string
        video_url:
          type: string
          nullable: true
    CreateModuleRequest:
      type: object
      required:
      - course_id
      - title
      - position
      properties:
        course_id:
          type: string
          format: uuid
        description:
          type: string
          nullable: true
        position:
          type: integer
          format: int32
        title:
          type: string
    Lesson:
      type: object
      required:
      - id
      - module_id
      - title
      - duration
      - position
      - is_free
      - published
      - created_at
      properties:
        content:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        duration:
          type: string
        id:
          type: string
          format: uuid
        is_free:
          type: boolean
        module_id:
          type: string
          format: uuid
        position:
          type: integer
          format: int32
        published:
          type: boolean
        title:
          type: string
        updated_at:
          type: string
          format: date-time
          nullable: true
        video_url:
          type: string
          nullable: true
    LoginRequest:
      type: object
      required:
      - email
      - password
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      required:
      - user
      - access_token
      - refresh_token
      - token_type
      - expires_in
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
          format: int64
        refresh_token:
          type: string
        token_type:
          type: string
        user:
          $ref: '#/components/schemas/UserResponse'
    OkResponse:
      type: object
      required:
      - ok
      properties:
        ok:
          type: boolean
    PageMeta:
      type: object
      description: Pagination metadata
      required:
      - page
      - per_page
      - total
      - total_pages
      properties:
        page:
          type: integer
          format: int64
        per_page:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        total_pages:
          type: integer
          format: int64
    PaginationQuery:
      type: object
      description: Pagination query for list endpoints
      properties:
        page:
          type: integer
          format: int64
          description: 1-based page index
          nullable: true
        per_page:
          type: integer
          format: int64
          description: Items per page
          nullable: true
    RefreshRequest:
      type: object
      required:
      - refresh_token
      properties:
        refresh_token:
          type: string
    RegisterRequest:
      type: object
      description: |-
        Common HTTP request/response types for the Auth and Users routes.

        These are intentionally separated from the route handlers to reduce
        duplication and keep a single source of truth for our API schemas.
      required:
      - first_name
      - last_name
      - username
      - email
      - password
      properties:
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
        username:
          type: string
    RegisterResponse:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          format: uuid
    TokenResponse:
      type: object
      required:
      - access_token
      - refresh_token
      - token_type
      - expires_in
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
          format: int64
        refresh_token:
          type: string
        token_type:
          type: string
    UpdateCourseRequest:
      type: object
      properties:
        description:
          type: string
          nullable: true
        duration:
          type: string
          nullable: true
        excerpt:
          type: string
          nullable: true
        featured:
          type: boolean
          nullable: true
        lessons:
          type: integer
          format: int32
          nullable: true
        original_price:
          type: number
          format: double
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        published:
          type: boolean
          nullable: true
        students:
          type: integer
          format: int32
          nullable: true
        thumbnail:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
    UpdateLessonRequest:
      type: object
      properties:
        content:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        duration:
          type: string
          nullable: true
        is_free:
          type: boolean
          nullable: true
        position:
          type: integer
          format: int32
          nullable: true
        published:
          type: boolean
          nullable: true
        title:
          type: string
          nullable: true
        video_url:
          type: string
          nullable: true
    UpdateModuleRequest:
      type: object
      properties:
        description:
          type: string
          nullable: true
        position:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
    UpdateUserRequest:
      type: object
      properties:
        address_line1:
          type: string
          nullable: true
        address_line2:
          type: string
          nullable: true
        avatar_url:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        date_of_birth:
          type: string
          format: date
          nullable: true
        facebook_url:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        gender:
          type: string
          nullable: true
        github_url:
          type: string
          nullable: true
        instagram_url:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        linkedin_url:
          type: string
          nullable: true
        locale:
          type: string
          nullable: true
        marketing_opt_in:
          type: boolean
          nullable: true
        phone:
          type: string
          nullable: true
        postal_code:
          type: string
          nullable: true
        secondary_email:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        timezone:
          type: string
          nullable: true
        twitter_url:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        website_url:
          type: string
          nullable: true
        youtube_url:
          type: string
          nullable: true
    UserProfile:
      type: object
      required:
      - id
      - username
      - email
      - role
      - is_active
      - is_blocked
      - created_at
      properties:
        avatar_url:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        email:
          type: string
        first_name:
          type: string
          nullable: true
        full_name:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        is_active:
          type: boolean
        is_blocked:
          type: boolean
        last_name:
          type: string
          nullable: true
        role:
          type: string
        username:
          type: string
    UserResponse:
      type: object
      required:
      - id
      - username
      - email
      - role
      - is_active
      - is_blocked
      properties:
        avatar_url:
          type: string
          nullable: true
        email:
          type: string
        first_name:
          type: string
          nullable: true
        full_name:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        is_active:
          type: boolean
        is_blocked:
          type: boolean
        last_name:
          type: string
          nullable: true
        role:
          type: string
        username:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
