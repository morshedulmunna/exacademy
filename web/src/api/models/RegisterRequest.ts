/* tslint:disable */
/* eslint-disable */
/**
 * execute_academy API
 * REST API for execute_academy. See category, product, auth, and user endpoints.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Common HTTP request/response types for the Auth and Users routes.
 * 
 * These are intentionally separated from the route handlers to reduce
 * duplication and keep a single source of truth for our API schemas.
 * @export
 * @interface RegisterRequest
 */
export interface RegisterRequest {
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    password: string;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    username: string;
}

/**
 * Check if a given object implements the RegisterRequest interface.
 */
export function instanceOfRegisterRequest(value: object): value is RegisterRequest {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    return true;
}

export function RegisterRequestFromJSON(json: any): RegisterRequest {
    return RegisterRequestFromJSONTyped(json, false);
}

export function RegisterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'firstName': json['first_name'],
        'lastName': json['last_name'],
        'password': json['password'],
        'username': json['username'],
    };
}

export function RegisterRequestToJSON(json: any): RegisterRequest {
    return RegisterRequestToJSONTyped(json, false);
}

export function RegisterRequestToJSONTyped(value?: RegisterRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'password': value['password'],
        'username': value['username'],
    };
}

