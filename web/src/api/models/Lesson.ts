/* tslint:disable */
/* eslint-disable */
/**
 * execute_academy API
 * REST API for execute_academy. See category, product, auth, and user endpoints.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Lesson
 */
export interface Lesson {
    /**
     * 
     * @type {string}
     * @memberof Lesson
     */
    content?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Lesson
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Lesson
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Lesson
     */
    duration: string;
    /**
     * 
     * @type {string}
     * @memberof Lesson
     */
    id: string;
    /**
     * 
     * @type {boolean}
     * @memberof Lesson
     */
    isFree: boolean;
    /**
     * 
     * @type {string}
     * @memberof Lesson
     */
    moduleId: string;
    /**
     * 
     * @type {number}
     * @memberof Lesson
     */
    position: number;
    /**
     * 
     * @type {boolean}
     * @memberof Lesson
     */
    published: boolean;
    /**
     * 
     * @type {string}
     * @memberof Lesson
     */
    title: string;
    /**
     * 
     * @type {Date}
     * @memberof Lesson
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Lesson
     */
    videoUrl?: string | null;
}

/**
 * Check if a given object implements the Lesson interface.
 */
export function instanceOfLesson(value: object): value is Lesson {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('duration' in value) || value['duration'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('isFree' in value) || value['isFree'] === undefined) return false;
    if (!('moduleId' in value) || value['moduleId'] === undefined) return false;
    if (!('position' in value) || value['position'] === undefined) return false;
    if (!('published' in value) || value['published'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function LessonFromJSON(json: any): Lesson {
    return LessonFromJSONTyped(json, false);
}

export function LessonFromJSONTyped(json: any, ignoreDiscriminator: boolean): Lesson {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : json['content'],
        'createdAt': (new Date(json['created_at'])),
        'description': json['description'] == null ? undefined : json['description'],
        'duration': json['duration'],
        'id': json['id'],
        'isFree': json['is_free'],
        'moduleId': json['module_id'],
        'position': json['position'],
        'published': json['published'],
        'title': json['title'],
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'videoUrl': json['video_url'] == null ? undefined : json['video_url'],
    };
}

export function LessonToJSON(json: any): Lesson {
    return LessonToJSONTyped(json, false);
}

export function LessonToJSONTyped(value?: Lesson | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'created_at': ((value['createdAt']).toISOString()),
        'description': value['description'],
        'duration': value['duration'],
        'id': value['id'],
        'is_free': value['isFree'],
        'module_id': value['moduleId'],
        'position': value['position'],
        'published': value['published'],
        'title': value['title'],
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
        'video_url': value['videoUrl'],
    };
}

