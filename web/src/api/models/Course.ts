/* tslint:disable */
/* eslint-disable */
/**
 * execute_academy API
 * REST API for execute_academy. See category, product, auth, and user endpoints.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Instructor } from './Instructor';
import {
    InstructorFromJSON,
    InstructorFromJSONTyped,
    InstructorToJSON,
    InstructorToJSONTyped,
} from './Instructor';

/**
 * API-facing Course types. Mirrors DB but keeps HTTP contract tidy.
 * @export
 * @interface Course
 */
export interface Course {
    /**
     * 
     * @type {Date}
     * @memberof Course
     */
    created_at: Date;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    duration: string;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    excerpt?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Course
     */
    featured: boolean;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    id: string;
    /**
     * 
     * @type {Instructor}
     * @memberof Course
     */
    instructor?: Instructor | null;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    instructor_id?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Course
     */
    lessons: number;
    /**
     * 
     * @type {number}
     * @memberof Course
     */
    original_price?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Course
     */
    price: number;
    /**
     * 
     * @type {boolean}
     * @memberof Course
     */
    published: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Course
     */
    published_at?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    slug: string;
    /**
     * 
     * @type {number}
     * @memberof Course
     */
    students: number;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    thumbnail?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    title: string;
    /**
     * 
     * @type {Date}
     * @memberof Course
     */
    updated_at?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof Course
     */
    view_count: number;
}

/**
 * Check if a given object implements the Course interface.
 */
export function instanceOfCourse(value: object): value is Course {
    if (!('created_at' in value) || value['created_at'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('duration' in value) || value['duration'] === undefined) return false;
    if (!('featured' in value) || value['featured'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('lessons' in value) || value['lessons'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('published' in value) || value['published'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('students' in value) || value['students'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('view_count' in value) || value['view_count'] === undefined) return false;
    return true;
}

export function CourseFromJSON(json: any): Course {
    return CourseFromJSONTyped(json, false);
}

export function CourseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Course {
    if (json == null) {
        return json;
    }
    return {
        
        'created_at': (new Date(json['created_at'])),
        'description': json['description'],
        'duration': json['duration'],
        'excerpt': json['excerpt'] == null ? undefined : json['excerpt'],
        'featured': json['featured'],
        'id': json['id'],
        'instructor': json['instructor'] == null ? undefined : InstructorFromJSON(json['instructor']),
        'instructor_id': json['instructor_id'] == null ? undefined : json['instructor_id'],
        'lessons': json['lessons'],
        'original_price': json['original_price'] == null ? undefined : json['original_price'],
        'price': json['price'],
        'published': json['published'],
        'published_at': json['published_at'] == null ? undefined : (new Date(json['published_at'])),
        'slug': json['slug'],
        'students': json['students'],
        'thumbnail': json['thumbnail'] == null ? undefined : json['thumbnail'],
        'title': json['title'],
        'updated_at': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'view_count': json['view_count'],
    };
}

export function CourseToJSON(json: any): Course {
    return CourseToJSONTyped(json, false);
}

export function CourseToJSONTyped(value?: Course | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': ((value['created_at']).toISOString()),
        'description': value['description'],
        'duration': value['duration'],
        'excerpt': value['excerpt'],
        'featured': value['featured'],
        'id': value['id'],
        'instructor': InstructorToJSON(value['instructor']),
        'instructor_id': value['instructor_id'],
        'lessons': value['lessons'],
        'original_price': value['original_price'],
        'price': value['price'],
        'published': value['published'],
        'published_at': value['published_at'] == null ? undefined : ((value['published_at'] as any).toISOString()),
        'slug': value['slug'],
        'students': value['students'],
        'thumbnail': value['thumbnail'],
        'title': value['title'],
        'updated_at': value['updated_at'] == null ? undefined : ((value['updated_at'] as any).toISOString()),
        'view_count': value['view_count'],
    };
}

